Define and compare recursion and iteration.

Recursion - process when a function calls itself and repeats same steps until complete (usually take longer)

Iteration - solving a problem using a loops (harder to implement)


Name five algorithms that are commonly implemented by recursion.

1. Factorial of a number
2. Greatest common divisor 
3. Fibonacci numbers
4. Linked list print
5. Reversing a string

When should you use recursion, and when should you avoid recursion? Give examples for each.

Should Use:You should use a recursion when you need multiple levels of results using know cases.
Ex: Would be finding every combination of numbers 


Avoid:You should not use it for basic code problems that you can use iteration. 
Ex: Printing a basic array.


Compare the recursive and iterative solutions to the three algorithms from the checkpoint (factorial, maximum, and fibonacci). What is similar, and what is different?

They are similar in that fact that they both use types of base cases. However, for example in maximum the iteration is much easier to understand. However in Fibonacci it makes much more sense to use recursion.The main difference is that iteration does not call itself and recursion does.


Given a multi-dimensional collection (such as an array) where the number of dimensions is unknown, write a recursive algorithm to count the number of items in the entire collection.

function count(array, index) {
  index = index || 0;

  if (array[index+1]) {
    return count(array, index+1);
  } else if (index === 0) {
    return 0;
  } else {
    return index + 1;
  }
}
		

A palindrome is a word or phrase whose spelling is the same either direction (e.g., racecar). Write a recursive algorithm to determine if a given word or phrase is a palindrome.

function isPalindrome(word) {
    var wordLength = word.length;
    if (wordLength === 0 || wordLength === 1) {
      console.log("true");
      return true;
    }
    
    if (word[0] === word[wordLength - 1]) {
        return isPalindrome( word.slice(1, wordLength - 1) );
    }
    console.log("false");
    return false;
};

isPalindrome("racecar");


Google Easter Egg: Google the term "recursion". Google will prompt you with "Did you mean: recursion". Explain why this behavior exhibits properties of recursion.

This is an infinite recursion because when you type recursion it always calls the prompt "Did you mean: recursion"